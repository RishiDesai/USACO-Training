/*
ID: rishide2
LANG: JAVA
TASK: ${NAME}
*/
// created by ${USER} on ${DATE}
#if (${PACKAGE_NAME} && ${PACKAGE_NAME} != "")package ${PACKAGE_NAME};#end

import java.io.IOException;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.PrintWriter;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.util.*;

import static java.lang.Integer.MAX_VALUE;
import static java.lang.Integer.MIN_VALUE;
import static java.lang.Math.min;
import static java.lang.Math.max;

public class ${NAME} {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new FileReader("${NAME}.in"));
        PrintWriter pw = new PrintWriter(new BufferedWriter(new FileWriter("${NAME}.out")));


        pw.close();
    }

    private static boolean isValid(int i, int j) {
        return i >= 0 && i < INF && j >= 0 && j < INF;
    }

    private static class Point {

        protected final int x, y;

        protected Point(int x, int y) {
            this.x = x;
            this.y = y;
        }

        @Override
        public String toString() {
            return "(" + x + ", " + y + ")";
        }

        @Override
        public boolean equals(Object o) {
            if (this == o) return true;
            if (! (o instanceof Point)) return false;

            Point point = (Point) o;

            return x == point.x && y == point.y;
        }

        @Override
        public int hashCode() {
            int result = x;
            result = 31 * result + y;
            return result;
        }

    }

    private static final int[] dx = {- 1, 0, 1, 0};
    private static final int[] dy = {0, 1, 0, - 1};
    private static final int UP = 0, RIGHT = 1, DOWN = 2, LEFT = 3;

}
